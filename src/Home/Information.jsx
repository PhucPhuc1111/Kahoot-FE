import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "./Information.css";

function Information() {
  const navigate = useNavigate();
  const [role, setRole] = useState(null);
  const [sections, setSections] = useState([]);
  const [editIndex, setEditIndex] = useState(null);
  const [editedContent, setEditedContent] = useState("");

  useEffect(() => {
    // L·∫•y role
    const storedUser = localStorage.getItem("user");
    if (storedUser) {
      try {
        const user = JSON.parse(storedUser);
        setRole(user.role);
      } catch (error) {
        console.error("Failed to parse user data:", error);
      }
    }

    // L·∫•y n·ªôi dung
    const storedSections = localStorage.getItem("infoSections");
    if (storedSections) {
      setSections(JSON.parse(storedSections));
    } else {
      // N·∫øu ch∆∞a c√≥ localStorage -> d√πng d·ªØ li·ªáu m·∫∑c ƒë·ªãnh
      setSections(defaultSections);
    }
  }, []);

  const defaultSections = [
    {
      title: "üåü About Us",
      content:
        "Kahoot! Fun is a vibrant learning platform designed to make education exciting, interactive, and accessible for all ages. We aim to inspire curiosity and joy in learning through live quizzes, games, and community engagement."
    },
    {
      title: "üéØ Our Audience",
      content:
        "üëâ Students from Kindergarten to University\nüëâ Teachers and Educators\nüëâ Parents supporting home learning\nüëâ Anyone who loves to learn in a fun way!"
    },
    {
      title: "üìú Terms of Use",
      content:
        "By accessing and using Kahoot! Fun, users agree to comply with our community standards and platform rules..."
    },
    {
      title: "ü§ù Community Guidelines",
      content:
        "‚úî Be kind and respectful in all your interactions.\n‚úî Encourage others and celebrate learning successes.\n‚úî Do not post answers publicly or spoil the experience for others.\n‚úî Report any inappropriate behavior or content immediately.\n‚úî Keep personal data safe."
    },
    {
      title: "üîí Privacy & Licensing",
      content:
        "We value your privacy. All user data is securely handled in compliance with GDPR and COPPA regulations."
    },
    {
      title: "üìß Contact Information",
      content:
        "Have questions or feedback? Reach out to us at support@kahootfun.com."
    }
  ];

  const handleSave = (index) => {
    const updatedSections = [...sections];
    updatedSections[index].content = editedContent;
    setSections(updatedSections);
    localStorage.setItem("infoSections", JSON.stringify(updatedSections));
    setEditIndex(null);
    setEditedContent("");
  };

  return (
    <div className="info-page">
      <div className="info-inner">
        <div className="info-header">
          <h1>About Kahoot! <span className="highlight">Fun</span></h1>
          <p>Learn everything about our platform, mission, and policies.</p>
        </div>

        {sections.map((section, index) => (
          <div className="info-section" key={index}>
            <h2>{section.title}</h2>

            {editIndex === index ? (
              <div>
                <textarea
                  value={editedContent}
                  onChange={(e) => setEditedContent(e.target.value)}
                  rows="6"
                  className="info-textarea"
                />
                <div style={{ marginTop: "10px" }}>
                  <button onClick={() => handleSave(index)} className="save-button">üíæ Save</button>
                  <button onClick={() => setEditIndex(null)} className="cancel-button">‚úñ Cancel</button>
                </div>
              </div>
            ) : (
              <p style={{ whiteSpace: "pre-line" }}>{section.content}</p>
            )}

            {/* N·∫øu l√† Admin th√¨ hi·ªán n√∫t Edit */}
            {role === "Admin" && editIndex !== index && (
              <button
                onClick={() => {
                  setEditIndex(index);
                  setEditedContent(section.content);
                }}
                className="edit-button"
              >
                ‚úèÔ∏è Edit
              </button>
            )}
          </div>
        ))}

        <div className="info-back">
          <button onClick={() => navigate(-1)}>‚¨Ö Back to Home</button>
        </div>
      </div>
    </div>
  );
}

export default Information;
